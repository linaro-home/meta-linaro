From 9713cbec8d97a0020c16668a2cf742a2927e5bd2 Mon Sep 17 00:00:00 2001
From: Anders Roxell <anders.roxell@linaro.org>
Date: Tue, 8 Oct 2013 16:02:56 +0200
Subject: [PATCH 1/2] scripts: TRINITY_PATH defaults to "."

TRINITY_PATH may be changed in the enviroment

Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
---
 scripts/analyse-dumps.sh                  | 5 ++++-
 scripts/clean-cores.sh                    | 5 ++++-
 scripts/find.sh                           | 9 ++++++---
 scripts/test-all-syscalls-parallel.sh     | 7 +++++--
 scripts/test-all-syscalls-sequentially.sh | 9 ++++++---
 scripts/test-multi.sh                     | 7 +++++--
 scripts/test-vm.sh                        | 5 ++++-
 7 files changed, 34 insertions(+), 13 deletions(-)

diff --git a/scripts/analyse-dumps.sh b/scripts/analyse-dumps.sh
index d55393c..2827349 100755
--- a/scripts/analyse-dumps.sh
+++ b/scripts/analyse-dumps.sh
@@ -1,8 +1,11 @@
 #!/bin/sh
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 for core in $(find . -name "core.*")
 do
-  gdb -batch -n -ex 'bt' ./trinity $core > core.txt
+  gdb -batch -n -ex 'bt' $TRINITY_BIN $core > core.txt
   SHA=$(cat core.txt|  grep -v New\ LWP | sha1sum)
   cat core.txt > core-$SHA.txt
   rm -f core.txt
diff --git a/scripts/clean-cores.sh b/scripts/clean-cores.sh
index 821e06a..3031b18 100755
--- a/scripts/clean-cores.sh
+++ b/scripts/clean-cores.sh
@@ -1,8 +1,11 @@
 #!/bin/sh
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 # remove old cores
 for i in `find . -name "core.*" -exec ls -l {} \; | grep -v "$(date +%b\ %e)" | awk '{ print $9 }'`; do rm -f $i; done
 
 # Remove corrupted cores
 find . -empty -name "core.*" -exec rm -f {} \;
-for i in $(file core.* | grep -v trinity | awk '{ print $1 }'  | sed 's/://'); do rm -f $i; done
+for i in $(file core.* | grep -v $TRINITY_BIN | awk '{ print $1 }'  | sed 's/://'); do rm -f $i; done
diff --git a/scripts/find.sh b/scripts/find.sh
index 537160f..7b405a4 100755
--- a/scripts/find.sh
+++ b/scripts/find.sh
@@ -5,6 +5,9 @@
 # sendmsg that only occurred after connect was called.
 #
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 check_tainted()
 {
     if [ "$(cat /proc/sys/kernel/tainted)" != $TAINT ]; then
@@ -27,18 +30,18 @@ while [ 1 ];
 do
 
 
-for sc in $(../trinity -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
+for sc in $($TRINITY_BIN -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
 do
   mkdir -p tmp.$i
   pushd tmp.$i
 
-  if [ ! -f ../../trinity ]; then
+  if [ ! -f $TRINITY_BIN ]; then
     echo lost!
     pwd
     exit
   fi
 
-  ../../trinity -q -l off -n -c sendmsg -c $sc -C32 -N 999999
+  $TRINITY_BIN -q -l off -n -c sendmsg -c $sc -C32 -N 999999
 
   popd
 
diff --git a/scripts/test-all-syscalls-parallel.sh b/scripts/test-all-syscalls-parallel.sh
index 861c156..9fcfa3e 100755
--- a/scripts/test-all-syscalls-parallel.sh
+++ b/scripts/test-all-syscalls-parallel.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 if [ ! -d tmp ]; then
   mkdir tmp
 fi
@@ -8,9 +11,9 @@ cd tmp
 
 while [ 1 ];
 do
-  for syscall in $(../trinity -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
+  for syscall in $($TRINITY_BIN -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
   do
-	MALLOC_CHECK_=2 ../trinity -q -c $syscall -D &
+	MALLOC_CHECK_=2 $TRINITY_BIN -q -c $syscall -D &
   done
   wait
 done
diff --git a/scripts/test-all-syscalls-sequentially.sh b/scripts/test-all-syscalls-sequentially.sh
index 85bcf71..aa90b3f 100755
--- a/scripts/test-all-syscalls-sequentially.sh
+++ b/scripts/test-all-syscalls-sequentially.sh
@@ -3,6 +3,9 @@
 # This is a useful test to run occasionally, to see which syscalls are
 # causing trinity to segfault.
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 check_tainted()
 {
     if [ "$(cat /proc/sys/kernel/tainted)" != $TAINT ]; then
@@ -19,18 +22,18 @@ TAINT=$(cat /proc/sys/kernel/tainted)
 
 while [ 1 ]
 do
-for syscall in $(./trinity -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
+for syscall in $($TRINITY_BIN -L | grep entrypoint | grep -v AVOID | awk '{ print $4 }' | sort -u)
 do
 	chmod 755 tmp
 	pushd tmp
 
-	if [ ! -f ../trinity ]; then
+	if [ ! -f $TRINITY_BIN ]; then
 		echo lost!
 		pwd
 		exit
 	fi
 
-	MALLOC_CHECK_=2 ../trinity -q -c $syscall -N 99999 -l off -C 64
+	MALLOC_CHECK_=2 $TRINITY_BIN -q -c $syscall -N 99999 -l off -C 64
 	popd
 
 	check_tainted
diff --git a/scripts/test-multi.sh b/scripts/test-multi.sh
index cad297c..9806af3 100755
--- a/scripts/test-multi.sh
+++ b/scripts/test-multi.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 check_tainted()
 {
     if [ "$(cat /proc/sys/kernel/tainted)" != $TAINT ]; then
@@ -21,7 +24,7 @@ NR_PROCESSES=$(($NR_CPUS * 2))
 
 while [ 1 ];
 do
-  cp ../trinity .
+  cp $TRINITY_BIN .
 
   for i in `seq 1 $NR_PROCESSES`
   do
@@ -33,7 +36,7 @@ do
     mkdir -p tmp.$i
     pushd tmp.$i
 
-    if [ ! -f ../../trinity ]; then
+    if [ ! -f $TRINITY_BIN ]; then
       echo lost!
       pwd
       exit
diff --git a/scripts/test-vm.sh b/scripts/test-vm.sh
index 4c472ca..15bb1eb 100755
--- a/scripts/test-vm.sh
+++ b/scripts/test-vm.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+TRINITY_PATH=${TRINITY_PATH:-.}
+TRINITY_BIN="$TRINITY_PATH/trinity"
+
 if [ ! -d tmp ]; then
   mkdir tmp
 fi
@@ -16,7 +19,7 @@ do
   cd tmp.$RND
   for i in `seq 1 $NR_PROCESSES`
   do
-	../../trinity -q -g vm &
+	$TRINITY_BIN -q -g vm &
   done
   wait
   cd ..
-- 
1.8.1.2

